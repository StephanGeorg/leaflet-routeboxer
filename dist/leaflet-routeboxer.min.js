L.RouteBoxer=L.extend({R:6371,grid_:null,latGrid_:[],lngGrid_:[],boxesX_:[],boxesY_:[],box:function(t,i){this.grid_=null,this.latGrid_=[],this.lngGrid_=[],this.boxesX_=[],this.boxesY_=[];var e=null;if(t instanceof Array)e=this.formVertices(t);else if(t instanceof google.maps.Polyline)if(t.getPath){e=new Array(t.getPath().getLength());for(var r=0;r<e.length;r++)e[r]=t.getPath().getAt(r)}else{e=new Array(t.getVertexCount());for(var s=0;s<e.length;s++)e[s]=t.getVertex(s)}return this.buildGrid_(e,i),this.findIntersectingCells_(e),this.mergeIntersectingCells_(),this.boxesX_.length<=this.boxesY_.length?this.boxesX_:this.boxesY_},formVertices:function(t){for(var i=[],e=0;e<t.length;e++)i.push(L.latLng(parseFloat(t[e][0]),parseFloat(t[e][1])));return i},buildGrid_:function(t,i){for(var e=new L.latLngBounds([]),r=0;r<t.length;r++)e.extend(t[r]);var s=e.getCenter();for(this.latGrid_.push(s.lat),this.latGrid_.push(s.rhumbDestinationPoint(0,i).lat),r=2;this.latGrid_[r-2]<e.getNorthEast().lat;r++)this.latGrid_.push(s.rhumbDestinationPoint(0,i*r).lat);for(r=1;this.latGrid_[1]>e.getSouthWest().lat;r++)this.latGrid_.unshift(s.rhumbDestinationPoint(180,i*r).lat);for(this.lngGrid_.push(s.lng),this.lngGrid_.push(s.rhumbDestinationPoint(90,i).lng),r=2;this.lngGrid_[r-2]<e.getNorthEast().lng;r++)this.lngGrid_.push(s.rhumbDestinationPoint(90,i*r).lng);for(r=1;this.lngGrid_[1]>e.getSouthWest().lng;r++)this.lngGrid_.unshift(s.rhumbDestinationPoint(270,i*r).lng);for(this.grid_=new Array(this.lngGrid_.length),r=0;r<this.grid_.length;r++)this.grid_[r]=new Array(this.latGrid_.length)},findIntersectingCells_:function(t){var i=this.getCellCoords_(t[0]);this.markCell_(i);for(var e=1;e<t.length;e++){var r=this.getGridCoordsFromHint_(t[e],t[e-1],i);(r[0]!==i[0]||r[1]!==i[1])&&(1===Math.abs(i[0]-r[0])&&i[1]===r[1]||i[0]===r[0]&&1===Math.abs(i[1]-r[1])?this.markCell_(r):this.getGridIntersects_(t[e-1],t[e],i,r),i=r)}},getCellCoords_:function(t){for(var i=0;this.lngGrid_[i]<t.lng;i++);for(var e=0;this.latGrid_[e]<t.lat;e++);return[i-1,e-1]},getGridCoordsFromHint_:function(t,i,e){var r,s;if(t.lng>i.lng)for(r=e[0];this.lngGrid_[r+1]<t.lng;r++);else for(r=e[0];this.lngGrid_[r]>t.lng;r--);if(t.lat>i.lat)for(s=e[1];this.latGrid_[s+1]<t.lat;s++);else for(s=e[1];this.latGrid_[s]>t.lat;s--);return[r,s]},getGridIntersects_:function(t,i,e,r){var s,n,h,o=t.rhumbBearingTo(i),a=t,l=e;if(i.lat>t.lat){for(h=e[1]+1;h<=r[1];h++)s=this.getGridIntersect_(t,o,this.latGrid_[h]),n=this.getGridCoordsFromHint_(s,a,l),this.fillInGridSquares_(l[0],n[0],h-1),a=s,l=n;this.fillInGridSquares_(l[0],r[0],h-1)}else{for(h=e[1];h>r[1];h--)s=this.getGridIntersect_(t,o,this.latGrid_[h]),n=this.getGridCoordsFromHint_(s,a,l),this.fillInGridSquares_(l[0],n[0],h),a=s,l=n;this.fillInGridSquares_(l[0],r[0],h)}},getGridIntersect_:function(t,i,e){var r=this.R*((e.toRad()-t.lat.toRad())/Math.cos(i.toRad()));return t.rhumbDestinationPoint(i,r)},fillInGridSquares_:function(t,i,e){var r;if(i>t)for(r=t;i>=r;r++)this.markCell_([r,e]);else for(r=t;r>=i;r--)this.markCell_([r,e])},markCell_:function(t){var i=t[0],e=t[1];this.grid_[i-1][e-1]=1,this.grid_[i][e-1]=1,this.grid_[i+1][e-1]=1,this.grid_[i-1][e]=1,this.grid_[i][e]=1,this.grid_[i+1][e]=1,this.grid_[i-1][e+1]=1,this.grid_[i][e+1]=1,this.grid_[i+1][e+1]=1},mergeIntersectingCells_:function(){var t,i,e,r=null;for(i=0;i<this.grid_[0].length;i++){for(t=0;t<this.grid_.length;t++)this.grid_[t][i]?(e=this.getCellBounds_([t,i]),r?r.extend(e.getNorthEast()):r=e):(this.mergeBoxesY_(r),r=null);this.mergeBoxesY_(r),r=null}for(t=0;t<this.grid_.length;t++){for(i=0;i<this.grid_[0].length;i++)this.grid_[t][i]?r?(e=this.getCellBounds_([t,i]),r.extend(e.getNorthEast())):r=this.getCellBounds_([t,i]):(this.mergeBoxesX_(r),r=null);this.mergeBoxesX_(r),r=null}},mergeBoxesX_:function(t){if(null!==t){for(var i=0;i<this.boxesX_.length;i++)if(this.boxesX_[i].getNorthEast().lng===t.getSouthWest().lng&&this.boxesX_[i].getSouthWest().lat===t.getSouthWest().lat&&this.boxesX_[i].getNorthEast().lat===t.getNorthEast().lat)return void this.boxesX_[i].extend(t.getNorthEast());this.boxesX_.push(t)}},mergeBoxesY_:function(t){if(null!==t){for(var i=0;i<this.boxesY_.length;i++)if(this.boxesY_[i].getNorthEast().lat===t.getSouthWest().lat&&this.boxesY_[i].getSouthWest().lng===t.getSouthWest().lng&&this.boxesY_[i].getNorthEast().lng===t.getNorthEast().lng)return void this.boxesY_[i].extend(t.getNorthEast());this.boxesY_.push(t)}},getCellBounds_:function(t){return new L.LatLngBounds(new L.LatLng(this.latGrid_[t[1]],this.lngGrid_[t[0]]),new L.LatLng(this.latGrid_[t[1]+1],this.lngGrid_[t[0]+1]))}}),L.LatLng.prototype.rhumbDestinationPoint=function(t,i){var e=6371,r=parseFloat(i)/e,s=this.lat.toRad(),n=this.lng.toRad();t=t.toRad();var h=s+r*Math.cos(t),o=h-s,a=Math.log(Math.tan(h/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),l=Math.abs(o)>1e-10?o/a:Math.cos(s),g=r*Math.sin(t)/l;Math.abs(h)>Math.PI/2&&(h=h>0?Math.PI-h:-(Math.PI-h));var _=(n+g+Math.PI)%(2*Math.PI)-Math.PI;return isNaN(h)||isNaN(_)?null:new L.LatLng(h.toDeg(),_.toDeg())},L.LatLng.prototype.rhumbBearingTo=function(t){var i=(t.lng-this.lng).toRad(),e=Math.log(Math.tan(t.lat.toRad()/2+Math.PI/4)/Math.tan(this.lat.toRad()/2+Math.PI/4));return Math.abs(i)>Math.PI&&(i=i>0?-(2*Math.PI-i):2*Math.PI+i),Math.atan2(i,e).toBrng()},Number.prototype.toRad=function(){return this*Math.PI/180},Number.prototype.toDeg=function(){return 180*this/Math.PI},Number.prototype.toBrng=function(){return(this.toDeg()+360)%360};
