L.RouteBoxer=L.extend({R:6371,grid_:null,latGrid_:[],lngGrid_:[],boxesX_:[],boxesY_:[],box:function(t,i){this.grid_=null,this.latGrid_=[],this.lngGrid_=[],this.boxesX_=[],this.boxesY_=[];var r=null;return t instanceof Array?r=t:t instanceof L.Polyline&&(r=t.getLatLngs()),this.buildGrid_(r,i),this.findIntersectingCells_(r),this.mergeIntersectingCells_(),this.boxesX_.length<=this.boxesY_.length?this.boxesX_:this.boxesY_},formVertices:function(t){for(var i=[],r=0;r<t.length;r++)i.push(L.latLng(parseFloat(t[r][0]),parseFloat(t[r][1])));return i},buildGrid_:function(t,i){for(var r=new L.latLngBounds([]),s=0;s<t.length;s++)r.extend(t[s]);var e=r.getCenter();for(this.latGrid_.push(e.lat),this.latGrid_.push(e.rhumbDestinationPoint(0,i).lat),s=2;this.latGrid_[s-2]<r.getNorthEast().lat;s++)this.latGrid_.push(e.rhumbDestinationPoint(0,i*s).lat);for(s=1;this.latGrid_[1]>r.getSouthWest().lat;s++)this.latGrid_.unshift(e.rhumbDestinationPoint(180,i*s).lat);for(this.lngGrid_.push(e.lng),this.lngGrid_.push(e.rhumbDestinationPoint(90,i).lng),s=2;this.lngGrid_[s-2]<r.getNorthEast().lng;s++)this.lngGrid_.push(e.rhumbDestinationPoint(90,i*s).lng);for(s=1;this.lngGrid_[1]>r.getSouthWest().lng;s++)this.lngGrid_.unshift(e.rhumbDestinationPoint(270,i*s).lng);for(this.grid_=new Array(this.lngGrid_.length),s=0;s<this.grid_.length;s++)this.grid_[s]=new Array(this.latGrid_.length)},findIntersectingCells_:function(t){var i=this.getCellCoords_(t[0]);this.markCell_(i);for(var r=1;r<t.length;r++){var s=this.getGridCoordsFromHint_(t[r],t[r-1],i);(s[0]!==i[0]||s[1]!==i[1])&&(1===Math.abs(i[0]-s[0])&&i[1]===s[1]||i[0]===s[0]&&1===Math.abs(i[1]-s[1])?this.markCell_(s):this.getGridIntersects_(t[r-1],t[r],i,s),i=s)}},getCellCoords_:function(t){for(var i=0;this.lngGrid_[i]<t.lng;i++);for(var r=0;this.latGrid_[r]<t.lat;r++);return[i-1,r-1]},getGridCoordsFromHint_:function(t,i,r){var s,e;if(t.lng>i.lng)for(s=r[0];this.lngGrid_[s+1]<t.lng;s++);else for(s=r[0];this.lngGrid_[s]>t.lng;s--);if(t.lat>i.lat)for(e=r[1];this.latGrid_[e+1]<t.lat;e++);else for(e=r[1];this.latGrid_[e]>t.lat;e--);return[s,e]},getGridIntersects_:function(t,i,r,s){var e,n,h,o=t.rhumbBearingTo(i),a=t,l=r;if(i.lat>t.lat){for(h=r[1]+1;h<=s[1];h++)e=this.getGridIntersect_(t,o,this.latGrid_[h]),n=this.getGridCoordsFromHint_(e,a,l),this.fillInGridSquares_(l[0],n[0],h-1),a=e,l=n;this.fillInGridSquares_(l[0],s[0],h-1)}else{for(h=r[1];h>s[1];h--)e=this.getGridIntersect_(t,o,this.latGrid_[h]),n=this.getGridCoordsFromHint_(e,a,l),this.fillInGridSquares_(l[0],n[0],h),a=e,l=n;this.fillInGridSquares_(l[0],s[0],h)}},getGridIntersect_:function(t,i,r){var s=this.R*((r.toRad()-t.lat.toRad())/Math.cos(i.toRad()));return t.rhumbDestinationPoint(i,s)},fillInGridSquares_:function(t,i,r){var s;if(i>t)for(s=t;i>=s;s++)this.markCell_([s,r]);else for(s=t;s>=i;s--)this.markCell_([s,r])},markCell_:function(t){var i=t[0],r=t[1];this.grid_[i-1][r-1]=1,this.grid_[i][r-1]=1,this.grid_[i+1][r-1]=1,this.grid_[i-1][r]=1,this.grid_[i][r]=1,this.grid_[i+1][r]=1,this.grid_[i-1][r+1]=1,this.grid_[i][r+1]=1,this.grid_[i+1][r+1]=1},mergeIntersectingCells_:function(){var t,i,r,s=null;for(i=0;i<this.grid_[0].length;i++){for(t=0;t<this.grid_.length;t++)this.grid_[t][i]?(r=this.getCellBounds_([t,i]),s?s.extend(r.getNorthEast()):s=r):(this.mergeBoxesY_(s),s=null);this.mergeBoxesY_(s),s=null}for(t=0;t<this.grid_.length;t++){for(i=0;i<this.grid_[0].length;i++)this.grid_[t][i]?s?(r=this.getCellBounds_([t,i]),s.extend(r.getNorthEast())):s=this.getCellBounds_([t,i]):(this.mergeBoxesX_(s),s=null);this.mergeBoxesX_(s),s=null}},mergeBoxesX_:function(t){if(null!==t){for(var i=0;i<this.boxesX_.length;i++)if(this.boxesX_[i].getNorthEast().lng===t.getSouthWest().lng&&this.boxesX_[i].getSouthWest().lat===t.getSouthWest().lat&&this.boxesX_[i].getNorthEast().lat===t.getNorthEast().lat)return void this.boxesX_[i].extend(t.getNorthEast());this.boxesX_.push(t)}},mergeBoxesY_:function(t){if(null!==t){for(var i=0;i<this.boxesY_.length;i++)if(this.boxesY_[i].getNorthEast().lat===t.getSouthWest().lat&&this.boxesY_[i].getSouthWest().lng===t.getSouthWest().lng&&this.boxesY_[i].getNorthEast().lng===t.getNorthEast().lng)return void this.boxesY_[i].extend(t.getNorthEast());this.boxesY_.push(t)}},getCellBounds_:function(t){return new L.LatLngBounds(new L.LatLng(this.latGrid_[t[1]],this.lngGrid_[t[0]]),new L.LatLng(this.latGrid_[t[1]+1],this.lngGrid_[t[0]+1]))}}),L.LatLng.prototype.rhumbDestinationPoint=function(t,i){var r=6371,s=parseFloat(i)/r,e=this.lat.toRad(),n=this.lng.toRad();t=t.toRad();var h=e+s*Math.cos(t),o=h-e,a=Math.log(Math.tan(h/2+Math.PI/4)/Math.tan(e/2+Math.PI/4)),l=Math.abs(o)>1e-10?o/a:Math.cos(e),g=s*Math.sin(t)/l;Math.abs(h)>Math.PI/2&&(h=h>0?Math.PI-h:-(Math.PI-h));var _=(n+g+Math.PI)%(2*Math.PI)-Math.PI;return isNaN(h)||isNaN(_)?null:new L.LatLng(h.toDeg(),_.toDeg())},L.LatLng.prototype.rhumbBearingTo=function(t){var i=(t.lng-this.lng).toRad(),r=Math.log(Math.tan(t.lat.toRad()/2+Math.PI/4)/Math.tan(this.lat.toRad()/2+Math.PI/4));return Math.abs(i)>Math.PI&&(i=i>0?-(2*Math.PI-i):2*Math.PI+i),Math.atan2(i,r).toBrng()},Number.prototype.toRad=function(){return this*Math.PI/180},Number.prototype.toDeg=function(){return 180*this/Math.PI},Number.prototype.toBrng=function(){return(this.toDeg()+360)%360};
